[unix_http_server]
file=%(here)s/var/run/supervisor.sock
chmod=0700

[supervisord]
logfile = %(log_dir)s/supervisord.log
logfile_maxbytes = 50MB
logfile_backups=10
loglevel = info
pidfile = %(here)s/var/run/supervisord.pid
nodaemon = False
minfds = 1024
minprocs = 200
umask = 022
identifier = supervisor
nocleanup = true
childlogdir = %(log_dir)s
environment = VIRTUAL_ENV="%(VIRTUAL_ENV)s",PATH="%(VIRTUAL_ENV)s/bin:%%(ENV_PATH)s"

[supervisorctl]
serverurl = unix:///%(here)s/var/run/supervisor.sock

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[program:celery]
directory = %(here)s
command = %(VIRTUAL_ENV)s/bin/celery worker -E -l info -A assembl.tasks.celery -c %(CELERY_NUM_WORKERS)s -b %(CELERY_BROKER)s
autostart = %(autostart_celery)s
autorestart = true
startsecs = 2
stopasgroup = false
stopwaitsecs = 60
# If the process didn't kill it's children after 60 seconds, it's unlikely to
# ever reap them, so kill them all
killasgroup = true
stdout_logfile = %(log_dir)s/celery.log
stdout_logfile_maxbytes = %(sup_log_size_celery_out)s
stdout_logfile_backups = %(sup_log_backups_celery_out)s
stderr_logfile = %(log_dir)s/celery.err
stderr_logfile_maxbytes = %(sup_log_size_celery_err)s
stderr_logfile_backups = %(sup_log_backups_celery_err)s

[program:source_reader]
directory = %(here)s
command = python -m assembl.tasks.source_reader %(CONFIG_FILE)s
autostart = %(autostart_source_reader)s
autorestart = true
startsecs = 2
stopasgroup = false
stopwaitsecs = 60
killasgroup = true
stdout_logfile = %(log_dir)s/source_reader.log
stdout_logfile_maxbytes = %(sup_log_size_source_reader_out)s
stdout_logfile_backups = %(sup_log_backups_source_reader_out)s
stderr_logfile = %(log_dir)s/source_reader.err
stderr_logfile_maxbytes = %(sup_log_size_source_reader_err)s
stderr_logfile_backups = %(sup_log_backups_source_reader_err)s

[program:celery_notify_beat]
directory = %(here)s
command = %(VIRTUAL_ENV)s/bin/celery -A assembl.tasks.celery beat -b %(CELERY_BROKER)s
autostart = %(autostart_celery_notify_beat)s
autorestart = true
startsecs = 2
stopasgroup = false
stopwaitsecs = 60
# If the process didn't kill it's children after 60 seconds, it's unlikely to
# ever reap them, so kill them all
killasgroup = true
stdout_logfile = %(log_dir)s/celery_beat.log
stdout_logfile_maxbytes = %(sup_log_size_celery_notify_beat_out)s
stdout_logfile_backups = %(sup_log_backups_celery_notify_beat_out)s
stderr_logfile = %(log_dir)s/celery_beat.err
stderr_logfile_maxbytes = %(sup_log_size_celery_notify_beat_err)s
stderr_logfile_backups = %(sup_log_backups_celery_notify_beat_err)s

[program:changes_router]
directory = %(here)s
command = python %(code_root)s/assembl/tasks/changes_router.py %(CONFIG_FILE)s
autostart = %(autostart_changes_router)s
autorestart = true
stopasgroup = false
stopwaitsecs = 5
startretries = 3
startsecs = 5
stdout_logfile = %(log_dir)s/changes_router.log
stdout_logfile_maxbytes = %(sup_log_size_changes_router_out)s
stdout_logfile_backups = %(sup_log_backups_changes_router_out)s
stderr_logfile = %(log_dir)s/changes_router.err
stderr_logfile_maxbytes = %(sup_log_size_changes_router_err)s
stderr_logfile_backups = %(sup_log_backups_changes_router_err)s

[group:dev]
programs = pserve, gulp, webpack

[group:prod]
programs = uwsgi

[program:pserve]
directory = %(here)s
command = %(VIRTUAL_ENV)s/bin/pserve --reload %(CONFIG_FILE)s
autostart = %(autostart_pserve)s
autorestart = false
environment = NODE_ENV=development
stdout_logfile = %(log_dir)s/pserve.log
stdout_logfile_maxbytes = %(sup_log_size_pserve_out)s
stdout_logfile_backups = %(sup_log_backups_pserve_out)s
stderr_logfile = %(log_dir)s/pserve.err
stderr_logfile_maxbytes = %(sup_log_size_pserve_err)s
stderr_logfile_backups = %(sup_log_backups_pserve_err)s

[program:gulp]
directory = %(here)s/assembl/static/js
command = %(VIRTUAL_ENV)s/bin/node %(here)s/assembl/static/js/node_modules/.bin/gulp
autostart = %(autostart_gulp)s
autorestart = true
stdout_logfile = %(log_dir)s/gulp.log
stdout_logfile_maxbytes = %(sup_log_size_gulp_out)s
stdout_logfile_backups = %(sup_log_backups_gulp_out)s
stderr_logfile = %(log_dir)s/gulp.err
stderr_logfile_maxbytes = %(sup_log_size_gulp_err)s
stderr_logfile_backups = %(sup_log_backups_gulp_err)s

[program:webpack]
directory = %(here)s/assembl/static2
command = %(VIRTUAL_ENV)s/bin/node --max-old-space-size=8192 %(here)s/assembl/static2/node_modules/.bin/webpack-dev-server --config webpack.dev.config.js
autostart = %(autostart_webpack)s
autorestart = true
environment = VIRTUAL_ENV="%(VIRTUAL_ENV)s",PATH="%(VIRTUAL_ENV)s/bin:%%(ENV_PATH)s",ASSEMBL_URL="%(ASSEMBL_URL)s",WEBPACK_URL="%(WEBPACK_URL)s"
stdout_logfile = %(log_dir)s/webpack.log
stdout_logfile_maxbytes = %(sup_log_size_webpack_out)s
stdout_logfile_backups = %(sup_log_backups_webpack_out)s
stderr_logfile = %(log_dir)s/webpack.err
stderr_logfile_maxbytes = %(sup_log_size_webpack_err)s
stderr_logfile_backups = %(sup_log_backups_webpack_err)s

[program:uwsgi]
directory = %(here)s
command=/bin/sh -c '%(code_root)s/scripts/ci_cd_scripts/check_availability.sh && exec uwsgi --die-on-term --ini %(CONFIG_FILE)s'
umask=002
autostart = %(autostart_uwsgi)s
autorestart = true
#user=www-data
stdout_logfile = %(log_dir)s/uwsgi.log
stdout_logfile_maxbytes = %(sup_log_size_uwsgi_out)s
stdout_logfile_backups = %(sup_log_backups_uwsgi_out)s
stderr_logfile = %(log_dir)s/uwsgi.err
stderr_logfile_maxbytes = %(sup_log_size_uwsgi_err)s
stderr_logfile_backups = %(sup_log_backups_uwsgi_err)s

[program:urlmetadata]
directory = %(here)s
command = %(VIRTUAL_ENV)spy3/bin/python3 -murl_metadata
autostart = %(autostart_urlmetadata)s
autorestart = true
stdout_logfile = %(log_dir)s/urlmetadata.log
stdout_logfile_maxbytes = %(sup_log_size_urlmetadata_out)s
stdout_logfile_backups = %(sup_log_backups_urlmetadata_out)s
stderr_logfile = %(log_dir)s/urlmetadata.err
stderr_logfile_maxbytes = %(sup_log_size_urlmetadata_err)s
stderr_logfile_backups = %(sup_log_backups_urlmetadata_err)s

[program:maintenance_uwsgi]
directory = %(here)s
command=uwsgi --die-on-term --ini %(code_root)/assembl/configs/maintenance.ini
umask=002
autostart = false
autorestart = true
stdout_logfile = %(log_dir)s/maintenance.log
stdout_logfile_maxbytes = %(sup_log_size_maintenance_out)s
stdout_logfile_backups = %(sup_log_backups_maintenance_out)s
stderr_logfile = %(log_dir)s/maintenance.err
stderr_logfile_maxbytes = %(sup_log_size_maintenance_err)s
stderr_logfile_backups = %(sup_log_backups_maintenance_err)s

[program:elasticsearch]
directory = %(here)s
command = %(elasticsearch_path)s -p %(here)s/var/run/elasticsearch.pid -Ecluster.name="assembl" -Epath.data="%(here)s/var/esdata" -Epath.logs="%(log_dir)s/elasticsearch" -Epath.conf=%(elasticsearch_config)s
autostart = %(autostart_elasticsearch)s
autorestart = true
environment = ES_JAVA_OPTS="-Xms1g -Xmx1g"
stdout_logfile = %(log_dir)s/elasticsearch.log
stdout_logfile_maxbytes = %(sup_log_size_elasticsearch_out)s
stdout_logfile_backups = %(sup_log_backups_elasticsearch_out)s
stderr_logfile = %(log_dir)s/elasticsearch.err
stderr_logfile_maxbytes = %(sup_log_size_elasticsearch_err)s
stderr_logfile_backups = %(sup_log_backups_elasticsearch_err)s
