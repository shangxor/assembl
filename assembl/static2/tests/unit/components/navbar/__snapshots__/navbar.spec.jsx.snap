// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AssemblNavbar component should render a BurgerNavbar and a hidden FlatNavbar with a tiny screenWidth 1`] = `
<div
  className="background-light"
>
  <Uncontrolled(Navbar)
    bsStyle="default"
    className="no-padding"
    fixedTop={true}
    fluid={true}
  >
    <div
      className="nav-bar max-container"
      id="navbar"
    >
      <BurgerNavbar
        elements={
          Array [
            <SectionLink
              options={
                Object {
                  "phase": "thread",
                  "phaseContext": "new",
                  "phaseId": "",
                  "screenTooSmall": true,
                  "slug": undefined,
                }
              }
              section={
                Object {
                  "id": "mysection",
                  "sectionType": "CUSTOM",
                  "title": "My section",
                  "url": "http://www.gnu.org",
                }
              }
            />,
          ]
        }
        logoLink="http://www.homesweethome.org"
        logoSrc="http://www.example.com/bar.jpg"
        renderUserMenu={[Function]}
      />
      <FlatNavbar
        elements={
          Array [
            <SectionLink
              options={
                Object {
                  "phase": "thread",
                  "phaseContext": "new",
                  "phaseId": "",
                  "screenTooSmall": true,
                  "slug": undefined,
                }
              }
              section={
                Object {
                  "id": "mysection",
                  "sectionType": "CUSTOM",
                  "title": "My section",
                  "url": "http://www.gnu.org",
                }
              }
            />,
          ]
        }
        logoLink="http://www.homesweethome.org"
        logoSrc="http://www.example.com/bar.jpg"
        maxWidth={-20}
        renderUserMenu={[Function]}
        setWidth={[Function]}
        style={
          Object {
            "opacity": 0,
            "position": "absolute",
            "top": "-200px",
          }
        }
      />
    </div>
  </Uncontrolled(Navbar)>
</div>
`;

exports[`AssemblNavbar component should render a FlatNavbar with a big screenWidth 1`] = `
<div
  className="background-light"
>
  <Uncontrolled(Navbar)
    bsStyle="default"
    className="no-padding"
    fixedTop={true}
    fluid={true}
  >
    <div
      className="nav-bar max-container"
      id="navbar"
    >
      <FlatNavbar
        elements={
          Array [
            <SectionLink
              options={
                Object {
                  "phase": "thread",
                  "phaseContext": "new",
                  "phaseId": "",
                  "screenTooSmall": false,
                  "slug": undefined,
                }
              }
              section={
                Object {
                  "id": "mysection",
                  "sectionType": "CUSTOM",
                  "title": "My section",
                  "url": "http://www.gnu.org",
                }
              }
            />,
          ]
        }
        logoLink="http://www.homesweethome.org"
        logoSrc="http://www.example.com/bar.jpg"
        maxWidth={1370}
        renderUserMenu={[Function]}
        setWidth={[Function]}
        style={Object {}}
      />
    </div>
  </Uncontrolled(Navbar)>
</div>
`;

exports[`mapSectionToElement function should return a SectionLink element that matches the snapshot 1`] = `
<SectionLink
  options={
    Object {
      "phase": "fake_phase",
      "slug": "fake_slug",
    }
  }
  section={
    Object {
      "sectionType": "DEBATE",
      "title": "fake_title",
    }
  }
/>
`;
